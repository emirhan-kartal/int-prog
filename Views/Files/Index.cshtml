@inject Microsoft.AspNetCore.Antiforgery.IAntiforgery Antiforgery
@{
    var token = Antiforgery.GetAndStoreTokens(Context).RequestToken;
    ViewData["Title"] = "My Files";
}
@model FileListViewModel

<div class="container py-4">
    <!-- Header Section -->
    <div class="d-flex justify-content-between align-items-center mb-4">
        <h2 class="mb-0"><i class="fas fa-file-alt me-2"></i>My Files</h2>
        <div>
            <button class="btn btn-outline-primary me-2" data-toggle="modal" data-target="#createFolderModal">
                <i class="fas fa-folder-plus me-2"></i> New Folder
            </button>
            <button class="btn btn-primary" data-toggle="modal" data-target="#uploadModal">
                <i class="fas fa-upload me-2"></i> Upload File
            </button>
        </div>
    </div>

    <!-- Storage Usage Card -->
    <div class="card mb-4 border-0 shadow-sm">
        <div class="card-body">
            <h5 class="card-title mb-3">Storage Usage: @Model.StorageUsedFormatted</h5>
            <div class="progress" style="height: 35px;">
                <div class="progress-bar bg-primary" style="font-size:1.5rem;"
                     role="progressbar"
                     style="width: @Model.StorageUsedPercentage%"
                     aria-valuenow="@Model.StorageUsedPercentage"
                     aria-valuemin="0"
                     aria-valuemax="100">
                    @Model.StorageUsedPercentage.ToString("F1")%
                </div>
            </div>
        </div>
    </div>

    <!-- Files List Card -->
    <div class="card border-0 shadow-sm">
        <div class="card-body">
            @if (!Model.Files.Any() && !Model.Folders.Any())
            {
                <div class="text-center py-5">
                    <i class="fas fa-file-upload fa-3x text-muted mb-3"></i>
                    <p class="text-muted">No files uploaded yet. Click the upload button to get started.</p>
                </div>
            }
            else
            {
                @if (Model.CurrentFolderId.HasValue)
                {
                    <div class="mb-3">
                        <a href="@Url.Action("Index", new { folderId = Model.ParentFolderId })"
                           class="btn btn-outline-secondary">
                            <i class="fas fa-arrow-left me-2"></i>Back
                        </a>
                    </div>
                }

                <div class="table-responsive">
                    <table class="table table-hover align-middle">
                        <thead class="table-light">
                            <tr>
                                <th>Name</th>
                                <th>Size</th>
                                <th>Uploaded</th>
                                <th class="text-end">Actions</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var folder in Model.Folders.Where(f => f.ParentFolderId == Model.CurrentFolderId))
                            {
                                <tr>
                                    <td>
                                        <a href="@Url.Action("Index", new { folderId = folder.Id })"
                                           class="text-decoration-none text-dark">
                                            <div class="d-flex align-items-center">
                                                <i class="fas fa-folder text-warning me-2"></i>
                                                @folder.Name
                                            </div>
                                        </a>
                                    </td>
                                    <td>-</td>
                                    <td>-</td>
                                    <td>
                                        <div class="btn-group float-end">
                                            <button onclick="renameFolder(@folder.Id, '@folder.Name')"
                                                    class="btn btn-sm btn-outline-secondary">
                                                <i class="fas fa-edit"></i>
                                            </button>
                                            <button onclick="deleteFolder(@folder.Id)"
                                                    class="btn btn-sm btn-outline-danger">
                                                <i class="fas fa-trash"></i>
                                            </button>
                                        </div>
                                    </td>
                                </tr>
                            }
                            @foreach (var file in Model.Files.Where(f => f.FolderId == Model.CurrentFolderId))
                            {
                                <tr>
                                    <td>
                                        <div class="d-flex align-items-center">
                                            <i class="fas fa-file-alt text-primary me-2"></i>
                                            @file.FileName
                                        </div>
                                    </td>
                                    <td>@file.FormattedSize</td>
                                    <td>@file.UploadedAt.ToString("MM/dd/yyyy HH:mm")</td>
                                    <td>
                                        <div class="btn-group float-end">
                                            <a href="@Url.Action("Download", new { id = file.Id })"
                                               class="btn btn-sm btn-outline-primary">
                                                <i class="fas fa-download"></i>
                                            </a>
                                            <button onclick="shareFile(@file.Id)"
                                                    class="btn btn-sm btn-outline-success">
                                                <i class="fas fa-share-alt"></i>
                                            </button>
                                            <button onclick="deleteFile(@file.Id)"
                                                    class="btn btn-sm btn-outline-danger">
                                                <i class="fas fa-trash"></i>
                                            </button>
                                        </div>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            }
        </div>
    </div>
</div>

<!-- Upload Modal -->
<div class="modal fade" id="uploadModal" tabindex="-1">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content border-0 shadow">
            <form id="uploadForm" asp-action="Upload" method="post" enctype="multipart/form-data">
                <input type="hidden" name="FolderId" value="@Model.CurrentFolderId" />
                <div class="modal-header bg-primary text-white border-0">
                    <h5 class="modal-title">
                        <i class="fas fa-cloud-upload-alt me-2"></i>Upload File
                    </h5>
                    <button type="button" class="close text-white" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body p-4">
                    <!-- Drop Zone -->
                    <div class="upload-drop-zone text-center p-4 mb-3" id="dropZone">
                        <i class="fas fa-cloud-upload-alt fa-3x text-muted mb-3"></i>
                        <h5 class="text-muted">Drag and drop your file here</h5>
                        <p class="text-muted small mb-3">or</p>
                        <div class="position-relative">
                            <input type="file" name="File" class="file-input" required
                                   id="fileInput" onchange="updateFileName(this)" />
                            <label for="fileInput" class="btn btn-outline-primary">
                                Choose File
                            </label>
                        </div>
                        <div id="selectedFileName" class="mt-2 text-muted small"></div>
                    </div>

                    <!-- Current Location Info -->
                    @if (Model.CurrentFolderId.HasValue)
                    {
                        <div class="text-muted mb-3">
                            <i class="fas fa-folder-open me-2"></i>
                            Files will be uploaded to: <strong>@Model.CurrentFolderPath</strong>
                        </div>
                    }
                </div>
                <div class="modal-footer border-0 bg-light">
                    <button type="button" class="btn btn-link text-muted" data-dismiss="modal">Cancel</button>
                    <button type="submit" class="btn btn-primary px-4">
                        <i class="fas fa-upload me-2"></i>Upload
                    </button>
                </div>
            </form>
        </div>
    </div>
</div>

<!-- Share Modal -->
<div class="modal fade" id="shareModal" tabindex="-1">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content border-0 shadow">
            <div class="modal-header bg-primary text-white border-0">
                <h5 class="modal-title">
                    <i class="fas fa-share-alt me-2"></i>Share File
                </h5>
                <button type="button" class="close text-white" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body p-4">
                <div class="form-group">
                    <label class="form-label text-muted">
                        <i class="fas fa-link me-2"></i>Share Link
                    </label>
                    <div class="input-group">
                        <input type="text" id="shareLink" class="form-control border-0 bg-light" readonly>
                        <div class="input-group-append">
                            <button class="btn btn-outline-primary" onclick="copyShareLink()">
                                <i class="fas fa-copy"></i>
                            </button>
                        </div>
                    </div>
                    <small class="form-text text-muted mt-2">
                        <i class="fas fa-clock me-1"></i>This link will expire in 7 days
                    </small>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Create Folder Modal -->
<div class="modal fade" id="createFolderModal" tabindex="-1">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content border-0 shadow">
            <form id="createFolderForm" asp-controller="Folders" asp-action="Create" method="post">
                <div class="modal-header bg-primary text-white border-0">
                    <h5 class="modal-title">
                        <i class="fas fa-folder-plus me-2"></i>Create New Folder
                    </h5>
                    <button type="button" class="close text-white" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body p-4">
                    <div class="form-group">
                        <label class="form-label text-muted">
                            <i class="fas fa-folder me-2"></i>Folder Name
                        </label>
                        <input type="text" name="Name" class="form-control border-0 bg-light"
                               required maxlength="50" placeholder="Enter folder name">
                    </div>
                </div>
                <div class="modal-footer border-0 bg-light">
                    <button type="button" class="btn btn-link text-muted" data-dismiss="modal">Cancel</button>
                    <button type="submit" class="btn btn-primary px-4">
                        <i class="fas fa-check me-2"></i>Create
                    </button>
                </div>
            </form>
        </div>
    </div>
</div>

@section Scripts {
    <script>

        function deleteFolder(folderId) {
            if (confirm('Are you sure you want to delete this folder?')) {
                $.post('/Folders/Delete', { id: folderId })
                    .done(function () {
                        location.reload();
                    })
                    .fail(function (xhr) {
                        alert('Failed to delete folder: ' + (xhr.responseText || 'Unknown error'));
                    });
            }
        }

        function renameFolder(folderId, currentName) {
            const newName = prompt('Enter new folder name:', currentName);
            if (newName && newName !== currentName) {
                $.post('/Folders/Rename', { id: folderId, newName: newName })
                    .done(function () {
                        location.reload();
                    })
                    .fail(function (xhr) {
                        alert('Failed to rename folder: ' + (xhr.responseText || 'Unknown error'));
                    });
            }
        }


        function deleteFile(fileId) {
            if (confirm('Are you sure you want to delete this file?')) {
                $.post('@Url.Action("Delete", "Files")', { id: fileId })
                    .done(function () {
                        location.reload();
                    })
                    .fail(function () {
                        alert('Failed to delete file.');
                    });
            }
        }

        function shareFile(fileId) {
            fetch(`/Files/Share/${fileId}`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-CSRF-TOKEN': '@token'
                },
                credentials: 'same-origin'
            })
                .then(response => {
                    if (!response.ok) {
                        throw new Error('Network response was not ok');
                    }
                    return response.json();
                })
                .then(data => {
                    document.getElementById('shareLink').value = data.url;
                    $('#shareModal').modal('show');
                })
                .catch(error => {
                    console.error('Error:', error);
                    alert('Failed to generate share link. Please try again later.');
                });
        }

        function copyShareLink() {
            const shareLink = document.getElementById('shareLink');
            shareLink.select();
            document.execCommand('copy');

            const button = event.currentTarget;
            const icon = button.querySelector('i');

            icon.className = 'fas fa-check';
            button.classList.add('btn-success');
            button.classList.remove('btn-outline-primary');

            setTimeout(() => {
                icon.className = 'fas fa-copy';
                button.classList.remove('btn-success');
                button.classList.add('btn-outline-primary');
            }, 2000);
        }

        $(document).ready(function () {
            $('[data-bs-toggle="modal"]').attr('data-toggle', 'modal');
            $('[data-bs-target="#uploadModal"]').attr('data-target', '#uploadModal');

            const dropZone = $('#dropZone');

            dropZone.on('dragover', function (e) {
                e.preventDefault();
                $(this).addClass('dragover');
            });

            dropZone.on('dragleave', function (e) {
                e.preventDefault();
                $(this).removeClass('dragover');
            });

            dropZone.on('drop', function (e) {
                e.preventDefault();
                $(this).removeClass('dragover');
                const files = e.originalEvent.dataTransfer.files;
                $('#fileInput')[0].files = files;
                updateFileName($('#fileInput')[0]);
            });

            $('#uploadForm').off('submit').on('submit', function (e) {
                e.preventDefault();
                const formData = new FormData(this);

                const submitBtn = $(this).find('button[type="submit"]');
                const originalText = submitBtn.html();
                submitBtn.html('<i class="fas fa-spinner fa-spin me-2"></i>Uploading...');
                submitBtn.prop('disabled', true);

                $.ajax({
                    url: '@Url.Action("Upload", "Files")',
                    type: 'POST',
                    data: formData,
                    processData: false,
                    contentType: false,
                    success: function (response) {
                        $('#uploadModal').modal('hide');
                        window.location.reload();
                    },
                    error: function (xhr, status, error) {
                        alert('Upload failed: ' + (xhr.responseText || error));
                        submitBtn.html(originalText);
                        submitBtn.prop('disabled', false);
                    }
                });
            });

            $('#createFolderForm').off('submit').on('submit', function (e) {
                e.preventDefault();
                var form = $(this);
                var submitBtn = form.find('button[type="submit"]');
                var originalText = submitBtn.html();

                submitBtn.html('<i class="fas fa-spinner fa-spin me-2"></i>Creating...');
                submitBtn.prop('disabled', true);

                $.ajax({
                    url: form.attr('action'),
                    method: 'POST',
                    data: form.serialize(),
                    success: function () {
                        $('#createFolderModal').modal('hide');
                        window.location.reload();
                    },
                    error: function (xhr) {
                        alert('Failed to create folder: ' + (xhr.responseText || 'Unknown error'));
                        submitBtn.html(originalText);
                        submitBtn.prop('disabled', false);
                    }
                });
            });
        });

        function updateFileName(input) {
            const fileName = input.files[0]?.name || '';
            $('#selectedFileName').text(fileName);
        }
    </script>
}

<style>
    .card {
        transition: transform 0.2s;
    }

        .card:hover {
            transform: translateY(-2px);
        }

    .progress {
        border-radius: 10px;
    }

    .progress-bar {
        transition: width 0.6s ease;
    }

    .table td {
        vertical-align: middle;
    }

    .btn-group .btn {
        padding: .375rem .75rem;
    }

    .custom-file-label {
        overflow: hidden;
        text-overflow: ellipsis;
        white-space: nowrap;
    }
    /* Upload Modal Styles */
    .modal-content {
        border-radius: 15px;
    }

    .modal-header {
        border-top-left-radius: 15px;
        border-top-right-radius: 15px;
    }

    .upload-drop-zone {
        border: 2px dashed #dee2e6;
        border-radius: 10px;
        transition: all 0.3s ease;
    }

        .upload-drop-zone.dragover {
            border-color: #1e293b;
            background-color: rgba(30, 41, 59, 0.05);
        }

    .file-input {
        position: absolute;
        width: 0;
        height: 0;
        opacity: 0;
    }

    .btn-outline-primary {
        border-color: #1e293b;
        color: #1e293b;
    }

        .btn-outline-primary:hover {
            background-color: #1e293b;
            color: white;
        }

    .form-control:focus {
        box-shadow: none;
        border-color: #1e293b;
    }

    /* Custom scrollbar for the modal */
    .modal-body::-webkit-scrollbar {
        width: 8px;
    }

    .modal-body::-webkit-scrollbar-track {
        background: #f1f1f1;
    }

    .modal-body::-webkit-scrollbar-thumb {
        background: #1e293b;
        border-radius: 4px;
    }
</style>