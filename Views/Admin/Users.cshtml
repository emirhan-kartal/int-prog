@using ViewModels.AdminViewModels
@model IEnumerable<UserViewModel>
@{
    ViewData["Title"] = "User Management";
}

<div class="container py-4">
    <div class="row mb-4">
        <div class="col-md-8">
            <h2><i class="fas fa-users me-2"></i>User Management</h2>
        </div>
        <div class="col-md-4">
            <button class="btn btn-primary float-end" data-toggle="modal" data-target="#createUserModal">
                <i class="fas fa-user-plus me-2"></i>Create User
            </button>
        </div>
    </div>

    <div class="card border-0 shadow-sm">
        <div class="card-body">
            @if (!Model.Any())
            {
                <div class="text-center py-5">
                    <i class="fas fa-users fa-3x text-muted mb-3"></i>
                    <p class="text-muted">No users found.</p>
                </div>
            }
            else
            {
                <div class="table-responsive">
                    <table class="table table-hover align-middle">
                        <thead class="table-light">
                            <tr>
                                <th>Email</th>
                                <th>Created</th>
                                <th>Storage Used</th>
                                <th>Role</th>
                                <th class="text-end">Actions</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var user in Model)
                            {
                                <tr>
                                    <td>
                                        <div class="d-flex align-items-center">
                                            <i class="fas fa-user text-primary me-2"></i>
                                            @user.Email
                                        </div>
                                    </td>
                                    <td>@user.CreatedAt.ToString("MM/dd/yyyy HH:mm")</td>
                                    <td>@user.FormattedStorageUsed</td>
                                    <td>
                                        <span class="badge @(user.IsAdmin ? "bg-danger" : "bg-primary")">
                                            @(user.IsAdmin ? "Admin" : "User")
                                        </span>
                                    </td>
                                    <td>
                                        <div class="btn-group float-end">
                                            <a href="@Url.Action("UserFiles", new { userId = user.Id })" 
                                               class="btn btn-sm btn-outline-primary" title="View Files">
                                                <i class="fas fa-folder"></i>
                                            </a>
                                            <button onclick="editUser('@user.Id', '@user.Email')"
                                                    class="btn btn-sm btn-outline-secondary" title="Edit User">
                                                <i class="fas fa-edit"></i>
                                            </button>
                                            @if (!user.IsAdmin)
                                            {
                                                <button onclick="deleteUser('@user.Id', '@user.Email')"
                                                        class="btn btn-sm btn-outline-danger" title="Delete User">
                                                    <i class="fas fa-trash"></i>
                                                </button>
                                            }
                                        </div>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            }
        </div>
    </div>
</div>

<!-- Create User Modal -->
<div class="modal fade" id="createUserModal" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <form id="createUserForm" asp-action="CreateUser" method="post">
                <div class="modal-header">
                    <h5 class="modal-title">Create New User</h5>
                    <button type="button" class="btn-close" data-dismiss="modal"></button>
                </div>
                <div class="modal-body">
                    <div class="mb-3">
                        <label class="form-label">Email</label>
                        <input type="email" name="email" class="form-control" required />
                    </div>
                    <div class="mb-3">
                        <label class="form-label">Password</label>
                        <input type="password" name="password" class="form-control" required 
                               minlength="8" />
                        <small class="text-muted">
                            Minimum 8 characters, must include uppercase, lowercase, number, and special character
                        </small>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-link" data-dismiss="modal">Cancel</button>
                    <button type="submit" class="btn btn-primary">Create User</button>
                </div>
            </form>
        </div>
    </div>
</div>

<!-- Edit User Modal -->
<div class="modal fade" id="editUserModal" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <form id="editUserForm" asp-action="EditUser" method="post">
                <input type="hidden" id="editUserId" name="userId" />
                <div class="modal-header">
                    <h5 class="modal-title">Edit User</h5>
                    <button type="button" class="btn-close" data-dismiss="modal"></button>
                </div>
                <div class="modal-body">
                    <div class="mb-3">
                        <label class="form-label">Email</label>
                        <input type="email" id="editUserEmail" name="email" class="form-control" required />
                    </div>
                    <div class="mb-3">
                        <label class="form-label">New Password (Optional)</label>
                        <input type="password" name="password" class="form-control" minlength="8" />
                        <small class="text-muted">Leave blank to keep current password</small>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-link" data-dismiss="modal">Cancel</button>
                    <button type="submit" class="btn btn-primary">Save Changes</button>
                </div>
            </form>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        function editUser(id, email) {
            $('#editUserId').val(id);
            $('#editUserEmail').val(email);
            $('#editUserModal').modal('show');
        }

        function deleteUser(id, email) {
            if (confirm(`Are you sure you want to delete user ${email}? This action cannot be undone.`)) {
                $.post('@Url.Action("DeleteUser")', { userId: id })
                    .done(function () {
                        window.location.reload();
                    })
                    .fail(function (xhr) {
                        alert('Failed to delete user: ' + (xhr.responseText || 'Unknown error'));
                    });
            }
        }

        // Form submission handlers
        $(document).ready(function() {
            $('#createUserForm').on('submit', function(e) {
                e.preventDefault();
                var form = $(this);
                var submitBtn = form.find('button[type="submit"]');
                var originalText = submitBtn.html();
                
                submitBtn.html('<i class="fas fa-spinner fa-spin me-2"></i>Creating...');
                submitBtn.prop('disabled', true);

                $.ajax({
                    url: form.attr('action'),
                    method: 'POST',
                    data: form.serialize(),
                    success: function() {
                        $('#createUserModal').modal('hide');
                        window.location.reload();
                    },
                    error: function(xhr) {
                        alert('Failed to create user: ' + (xhr.responseText || 'Unknown error'));
                        submitBtn.html(originalText);
                        submitBtn.prop('disabled', false);
                    }
                });
            });

            $('#editUserForm').on('submit', function(e) {
                e.preventDefault();
                var form = $(this);
                var submitBtn = form.find('button[type="submit"]');
                var originalText = submitBtn.html();
                
                submitBtn.html('<i class="fas fa-spinner fa-spin me-2"></i>Saving...');
                submitBtn.prop('disabled', true);

                $.ajax({
                    url: form.attr('action'),
                    method: 'POST',
                    data: form.serialize(),
                    success: function() {
                        $('#editUserModal').modal('hide');
                        window.location.reload();
                    },
                    error: function(xhr) {
                        alert('Failed to update user: ' + (xhr.responseText || 'Unknown error'));
                        submitBtn.html(originalText);
                        submitBtn.prop('disabled', false);
                    }
                });
            });
        });
    </script>
} 