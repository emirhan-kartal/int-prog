@using ViewModels.AdminViewModels
@model UserDetailsViewModel
@{
    ViewData["Title"] = $"Files for {Model.UserEmail}";
}

<div class="container py-4">
    <div class="d-flex justify-content-between align-items-center mb-4">
        <div>
            <h2 class="mb-1">
                <i class="fas fa-folder-open me-2"></i>Files for @Model.UserEmail
            </h2>
            <p class="text-muted mb-0">Storage Used: @Model.FormattedStorageUsed</p>
        </div>
        <div>
            <a asp-action="Users" class="btn btn-outline-secondary">
                <i class="fas fa-arrow-left me-2"></i>Back to Users
            </a>
            <button class="btn btn-outline-primary" data-toggle="modal" data-target="#createFolderModal">
                <i class="fas fa-folder-plus me-2"></i>New Folder
            </button>
            <button class="btn btn-primary" data-toggle="modal" data-target="#uploadModal">
                <i class="fas fa-upload me-2"></i>Upload File
            </button>
        </div>
    </div>

    <div class="card border-0 shadow-sm">
        <div class="card-body">
            <!-- Breadcrumb Navigation -->
            <nav aria-label="breadcrumb" class="mb-3">
                <ol class="breadcrumb">
                    <li class="breadcrumb-item">
                        <a asp-action="UserFiles" asp-route-userId="@Model.UserId">Root</a>
                    </li>
                    @if (ViewBag.CurrentFolderId != null)
                    {
                        var pathFolders = ViewBag.CurrentFolderPath.Split('/', StringSplitOptions.RemoveEmptyEntries);
                        var currentPath = "";
                        foreach (var folder in pathFolders)
                        {
                            currentPath += "/" + folder;
                            <li class="breadcrumb-item">@folder</li>
                        }
                    }
                </ol>
            </nav>

            @if (!Model.Files.Any() && !Model.Folders.Any())
            {
                <div class="text-center py-5">
                    <i class="fas fa-folder-open fa-3x text-muted mb-3"></i>
                    <p class="text-muted">No files or folders found for this user.</p>
                </div>
            }
            else
            {
                <div class="table-responsive">
                    <table class="table table-hover align-middle">
                        <thead class="table-light">
                            <tr>
                                <th>Name</th>
                                <th>Type</th>
                                <th>Size</th>
                                <th>Modified</th>
                                <th class="text-end">Actions</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var folder in Model.Folders)
                            {
                                <tr>
                                    <td>
                                        <div class="d-flex align-items-center">
                                            <i class="fas fa-folder text-warning me-2"></i>
                                            <a asp-action="UserFiles"
                                               asp-route-userId="@Model.UserId"
                                               asp-route-folderId="@folder.Id"
                                               class="text-decoration-none text-dark">
                                                @folder.Name
                                            </a>
                                        </div>
                                    </td>
                                    <td>Folder</td>
                                    <td>@folder.FileCount files</td>
                                    <td>@folder.CreatedAt.ToString("MM/dd/yyyy HH:mm")</td>
                                    <td>
                                        <div class="btn-group float-end">
                                            <button class="btn btn-sm btn-outline-danger"
                                                    onclick="deleteFolder(@folder.Id)">
                                                <i class="fas fa-trash"></i>
                                            </button>
                                        </div>
                                    </td>
                                </tr>
                            }
                            @foreach (var file in Model.Files)
                            {
                                <tr>
                                    <td>
                                        <div class="d-flex align-items-center">
                                            <i class="fas fa-file text-primary me-2"></i>
                                            @file.FileName
                                        </div>
                                    </td>
                                    <td>@file.ContentType</td>
                                    <td>@file.FormattedSize</td>
                                    <td>@file.UploadedAt.ToString("MM/dd/yyyy HH:mm")</td>
                                    <td>
                                        <div class="btn-group float-end">
                                            <a href="@Url.Action("Download", "Files", new { id = file.Id })"
                                               class="btn btn-sm btn-outline-primary" title="Download">
                                                <i class="fas fa-download"></i>
                                            </a>
                                            <button onclick="renameFile(@file.Id, '@file.FileName')"
                                                    class="btn btn-sm btn-outline-secondary" title="Rename">
                                                <i class="fas fa-edit"></i>
                                            </button>
                                            <button class="btn btn-sm btn-outline-danger"
                                                    onclick="deleteFile(@file.Id)" title="Delete">
                                                <i class="fas fa-trash"></i>
                                            </button>
                                        </div>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            }
        </div>
    </div>
</div>

<!-- Create Folder Modal -->
<div class="modal fade" id="createFolderModal" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <form asp-action="CreateFolder" method="post">
                <input type="hidden" name="userId" value="@Model.UserId" />
                <input type="hidden" name="parentFolderId" value="@ViewBag.CurrentFolderId" />
                <div class="modal-header">
                    <h5 class="modal-title">Create New Folder</h5>
                    <button type="button" class="btn-close" data-dismiss="modal"></button>
                </div>
                <div class="modal-body">
                    @if (ViewBag.CurrentFolderId != null)
                    {
                        <div class="text-muted mb-3">
                            <i class="fas fa-folder-open me-2"></i>
                            Creating in: <strong>@ViewBag.CurrentFolderPath</strong>
                        </div>
                    }
                    <div class="mb-3">
                        <label class="form-label">Folder Name</label>
                        <input type="text" name="folderName" class="form-control" required
                               placeholder="Enter folder name" />
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-link" data-dismiss="modal">Cancel</button>
                    <button type="submit" class="btn btn-primary">Create Folder</button>
                </div>
            </form>
        </div>
    </div>
</div>

<!-- Upload Modal -->
<div class="modal fade" id="uploadModal" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <form asp-action="UploadFile" method="post" enctype="multipart/form-data">
                <input type="hidden" name="userId" value="@Model.UserId" />
                <input type="hidden" name="folderId" value="@ViewBag.CurrentFolderId" />
                <div class="modal-header">
                    <h5 class="modal-title">Upload File for @Model.UserEmail</h5>
                    <button type="button" class="btn-close" data-dismiss="modal"></button>
                </div>
                <div class="modal-body">
                    <div class="upload-area mb-3">
                        <input type="file" name="file" id="fileInput" class="d-none" required />
                        <div class="upload-drop-zone text-center p-5" id="dropZone">
                            <i class="fas fa-cloud-upload-alt fa-3x text-muted mb-3"></i>
                            <h5>Drag & Drop your file here</h5>
                            <p class="text-muted mb-3">or</p>
                            <button type="button" class="btn btn-outline-primary" onclick="document.getElementById('fileInput').click()">
                                <i class="fas fa-folder-open me-2"></i>Browse Files
                            </button>
                        </div>
                        <div id="fileInfo" class="d-none mt-3">
                            <div class="selected-file p-3 border rounded">
                                <div class="d-flex align-items-center">
                                    <i class="fas fa-file fa-2x text-primary me-3"></i>
                                    <div class="flex-grow-1">
                                        <h6 class="mb-1" id="fileName">filename.txt</h6>
                                        <small class="text-muted" id="fileSize">0 KB</small>
                                    </div>
                                    <button type="button" class="btn btn-link text-danger" onclick="clearFileSelection()">
                                        <i class="fas fa-times"></i>
                                    </button>
                                </div>
                            </div>
                        </div>
                    </div>
                    @if (ViewBag.CurrentFolderId != null)
                    {
                        <div class="text-muted mb-3">
                            <i class="fas fa-folder-open me-2"></i>
                            Uploading to: <strong>@ViewBag.CurrentFolderPath</strong>
                        </div>
                    }
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-link" data-dismiss="modal">Cancel</button>
                    <button type="submit" class="btn btn-primary">Upload</button>
                </div>
            </form>
        </div>
    </div>
</div>

<!-- Rename Modal -->
<div class="modal fade" id="renameModal" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <form asp-action="ModifyFile" method="post">
                <input type="hidden" id="renameFileId" name="fileId" />
                <div class="modal-header">
                    <h5 class="modal-title">Rename File</h5>
                    <button type="button" class="btn-close" data-dismiss="modal"></button>
                </div>
                <div class="modal-body">
                    <div class="mb-3">
                        <label class="form-label">New Name</label>
                        <input type="text" id="newFileName" name="newName" class="form-control" required />
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-link" data-dismiss="modal">Cancel</button>
                    <button type="submit" class="btn btn-primary">Save</button>
                </div>
            </form>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        function deleteFile(fileId) {
            if (confirm('Are you sure you want to delete this file?')) {
                $.post('@Url.Action("DeleteFile", "Files")', { id: fileId })
                    .done(function () {
                        location.reload();
                    })
                    .fail(function (xhr) {
                        alert('Failed to delete file: ' + (xhr.responseText || 'Unknown error'));
                    });
            }
        }

        function deleteFolder(folderId) {
            if (confirm('Are you sure you want to delete this folder and all its contents?')) {
                $.post('@Url.Action("DeleteFolder", "Folders")', { id: folderId })
                    .done(function () {
                        location.reload();
                    })
                    .fail(function (xhr) {
                        alert('Failed to delete folder: ' + (xhr.responseText || 'Unknown error'));
                    });
            }
        }

        function renameFile(fileId, currentName) {
            $('#renameFileId').val(fileId);
            $('#newFileName').val(currentName);
            $('#renameModal').modal('show');
        }

        const dropZone = document.getElementById('dropZone');
        const fileInput = document.getElementById('fileInput');
        const fileInfo = document.getElementById('fileInfo');
        const fileName = document.getElementById('fileName');
        const fileSize = document.getElementById('fileSize');

        function formatBytes(bytes) {
            if (bytes < 1024) return bytes + ' B';
            else if (bytes < 1048576) return (bytes / 1024).toFixed(2) + ' KB';
            else if (bytes < 1073741824) return (bytes / 1048576).toFixed(2) + ' MB';
            else return (bytes / 1073741824).toFixed(2) + ' GB';
        }

        function showFileInfo(file) {
            fileName.textContent = file.name;
            fileSize.textContent = formatBytes(file.size);
            dropZone.classList.add('d-none');
            fileInfo.classList.remove('d-none');
        }

        function clearFileSelection() {
            fileInput.value = '';
            dropZone.classList.remove('d-none');
            fileInfo.classList.add('d-none');
        }

        dropZone.addEventListener('dragover', (e) => {
            e.preventDefault();
            dropZone.classList.add('drag-over');
        });

        dropZone.addEventListener('dragleave', (e) => {
            e.preventDefault();
            dropZone.classList.remove('drag-over');
        });

        dropZone.addEventListener('drop', (e) => {
            e.preventDefault();
            dropZone.classList.remove('drag-over');
            fileInput.files = e.dataTransfer.files;
            showFileInfo(e.dataTransfer.files[0]);
        });

        fileInput.addEventListener('change', (e) => {
            if (fileInput.files.length > 0) {
                showFileInfo(fileInput.files[0]);
            }
        });
    </script>
} 